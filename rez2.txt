"""
Алгоритм, реализованный в файле `testd5.py`, является реализацией
сортировки слиянием (merge sort). Оценим его сложность:

Временная сложность:
- Лучший случай: O(n log n)
- Средний случай: O(n log n)
- Худший случай: O(n log n)

Алгоритм разбивает массив на две половины до тех пор, пока не
останется по одному элементу (процесс разбиения имеет логарифмическую
сложность O(log n)). Затем происходит слияние этих половин, что в
сумме занимает линейное время O(n) на каждом уровне рекурсии.

Пространственная сложность:
- Худший случай: O(n)

Для хранения временных подмассивов требуется дополнительное
пространство, пропорциональное размеру массива, что приводит к
линейной пространственной сложности.

Основные шаги алгоритма:
1. Разделение массива на две части.
2. Рекурсивная сортировка каждой половины.
3. Слияние отсортированных половин в один отсортированный массив.

Преимущества и недостатки:
- Преимущества:
  - Гарантированная временная сложность O(n log n).
  - Стабильность (сохраняет порядок равных элементов).
- Недостатки:
  - Дополнительные затраты по памяти O(n).

Сортировка слиянием хорошо подходит для сортировки больших массивов,
особенно если требуется стабильность сортировки. Однако, если память
ограничена, могут быть предпочтительны другие алгоритмы сортировки,
такие как быстрая сортировка (quick sort), несмотря на её худший
случай O(n^2).
"""
